// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using demosite.Models;

namespace demosite.Migrations
{
    [DbContext(typeof(demositeContext))]
    partial class demositeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("demosite.Models.Building", b =>
                {
                    b.Property<int>("BuildingID");

                    b.Property<string>("BAddress")
                        .IsRequired();

                    b.Property<string>("BName")
                        .IsRequired();

                    b.HasKey("BuildingID");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("demosite.Models.Floor", b =>
                {
                    b.Property<int>("FloorID");

                    b.Property<int>("BuildingID");

                    b.Property<string>("FloorName");

                    b.HasKey("FloorID");

                    b.HasIndex("BuildingID");

                    b.ToTable("Floor");
                });

            modelBuilder.Entity("demosite.Models.Person", b =>
                {
                    b.Property<int>("PersonID");

                    b.Property<string>("Fname")
                        .IsRequired();

                    b.Property<string>("LName")
                        .IsRequired();

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("PersonID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("demosite.Models.PersonsBuilding", b =>
                {
                    b.Property<int>("PersonID");

                    b.Property<int>("BuildingID");

                    b.HasKey("PersonID", "BuildingID");

                    b.HasIndex("BuildingID");

                    b.ToTable("PersonsBuilding");
                });

            modelBuilder.Entity("demosite.Models.Room", b =>
                {
                    b.Property<int>("RoomID");

                    b.Property<int>("FloorID");

                    b.Property<string>("RoomName")
                        .IsRequired();

                    b.HasKey("RoomID");

                    b.HasIndex("FloorID");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("demosite.Models.Floor", b =>
                {
                    b.HasOne("demosite.Models.Building", "Building")
                        .WithMany("Floors")
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("demosite.Models.PersonsBuilding", b =>
                {
                    b.HasOne("demosite.Models.Building", "Building")
                        .WithMany("PersonsBuildings")
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("demosite.Models.Person", "Person")
                        .WithMany("PersonsBuildings")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("demosite.Models.Room", b =>
                {
                    b.HasOne("demosite.Models.Floor", "Floor")
                        .WithMany("Rooms")
                        .HasForeignKey("FloorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
